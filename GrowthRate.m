function results = GrowthRate(im)
%Image Processing Function
%
% IM      - Input image.
% RESULTS - A scalar structure with the processing results.
%

%--------------------------------------------------------------------------
% Auto-generated by imageBatchProcessor App. 
%
% When used by the App, this function will be called for every input image
% file automatically. IM contains the input image as a matrix. RESULTS is a
% scalar structure containing the results of this processing function.
%
%--------------------------------------------------------------------------

% Replace the sample below with your code----------------------------------

%%Create variables to hold the values of row and column values


LeftRow= 370;
LeftColumn= 378;
RightRow= 370;
RightColumn= 890;

%%Import the image and create a thresholded one.

gs= rgb2gray(im);
level= graythresh(gs);
thres= imbinarize(gs,level);

imshow(thres);

%%Measure the distance in pixels from the left colony to the inside

LIcondition=true;
LIColCounter= LeftColumn;
LISum=0;

while LIcondition==true
    if(thres(LeftRow,LIColCounter)==1)
        LISum= LISum + 1;
        LIColCounter= LIColCounter + 1;
    else
        LIcondition=false;
    end
end


%%Measure the distance in pixels from the left colony to the outside

LOcondition=true;
LOColCounter= LeftColumn;
LOSum=0;

while LOcondition==true
    if(thres(LeftRow,LOColCounter)==1)
        LOSum= LOSum + 1;
        LOColCounter= LOColCounter - 1;
    else
        LOcondition=false;
    end
end

%%Measure the distance in pixels from the right colony to the inside

RIcondition=true;
RIColCounter= RightColumn;
RISum=0;

while RIcondition==true
    if(thres(RightRow,RIColCounter)==1)
        RISum= RISum + 1;
        RIColCounter= RIColCounter - 1;
    else
        RIcondition=false;
    end
end

%%Measure the distance in pixels from the right colony to the outside

ROcondition=true;
ROColCounter= RightColumn;
ROSum=0;

while ROcondition==true
    if(thres(RightRow,ROColCounter)==1)
        ROSum= ROSum + 1;
        ROColCounter= ROColCounter + 1;
    else
        ROcondition=false;
    end
end

%%Measure the distance in pixels from the left colony to top

LTcondition=true;
LTRowCounter= LeftRow;
LTSum=0;

while LTcondition==true
    if(thres(LTRowCounter,LeftColumn)==1)
        LTSum= LTSum + 1;
        LTRowCounter= LTRowCounter - 1;
    else
        LTcondition=false;
    end
end


%%Measure the distance in pixels from the left colony to bottom

LBcondition=true;
LBRowCounter= LeftRow;
LBSum=0;

while LBcondition==true
    if(thres(LBRowCounter,LeftColumn)==1)
        LBSum= LBSum + 1;
        LBRowCounter= LBRowCounter + 1;
    else
        LBcondition=false;
    end
end


%%Measure the distance in pixels from the right colony to top


RTcondition=true;
RTRowCounter= LeftRow;
RTSum=0;

while RTcondition==true
    if(thres(RTRowCounter,RightColumn)==1)
        RTSum= RTSum + 1;
        RTRowCounter= RTRowCounter - 1;
    else
        RTcondition=false;
    end
end



%%Measure the distance in pixels from the right colony to the bottom

RBcondition=true;
RBRowCounter= LeftRow;
RBSum=0;

while RBcondition==true
    if(thres(RBRowCounter,RightColumn)==1)
        RBSum= RBSum + 1;
        RBRowCounter= RBRowCounter + 1;
    else
        RBcondition=false;
    end
end






results= [LOSum LISum ROSum RISum LTSum LBSum RTSum RBSum];



%--------------------------------------------------------------------------
